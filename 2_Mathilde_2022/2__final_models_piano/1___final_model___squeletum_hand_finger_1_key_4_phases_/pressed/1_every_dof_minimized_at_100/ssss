import pickle
import numpy as np

# --- Download datas on a .pckl file --- #

data = dict(
    states=sol.states,
    controls=sol.controls,
    parameters=sol.parameters,
    iterations=sol.iterations,
    cost=np.array(sol.cost)[0][0],
    detailed_cost=sol.detailed_cost,
    real_time_to_optimize=sol.real_time_to_optimize,
    param_scaling=[nlp.parameters.scaling for nlp in ocp.nlp],
    phase_time=phase_time,
    phase_shape=phase_shape,
    q_finger_marker_5_idx_1=q_finger_marker_5_idx_1,
    q_finger_marker_idx_4=q_finger_marker_idx_4,
)

file_path = "/home/alpha/pianoptim/PianOptim/2_Mathilde_2022/2__final_models_piano/1___final_model___squeletum_hand_finger_1_key_4_phases_/pressed/1_every_dof_minimized_at_100/1_every_dof_minimized_at_100.pckl"

with open(file_path, "wb") as file:
    pickle.dump(data, file)

# --- Print results --- #

print("States:", sol.states)
print("Controls:", sol.controls)
print("Parameters:", sol.parameters)
print("Iterations:", sol.iterations)
print("Cost:", np.array(sol.cost)[0][0])
print("Detailed Cost:", sol.detailed_cost)
print("Real Time to Optimize:", sol.real_time_to_optimize)
print("Param Scaling:", [nlp.parameters.scaling for nlp in ocp.nlp])
print("Phase Time:", phase_time)
print("Phase Shape:", phase_shape)
print("q_finger_marker_5_idx_1:", q_finger_marker_5_idx_1)
print("q_finger_marker_idx_4:", q_finger_marker_idx_4)
